{
  "root": {

    "networks": {

      "open": {

        "testNet": {

          "users": {
            "admin": 1,
            "user": 1,
            "upvoter": 1,
            "downvoter": 1
          },

          "admins": {
            "admin": 1
          },

          "queue": {
            "front": "frontSong",
            "back": "backSong",

            "frontSong": {

              "data": {
                "album_name": "Crash",
                "artist_name": "Dave Matthews Band",
                "image_url": "www.foobar.com/foo",
                "name": "Two Step"
              },

              "requester": "admin",

              "coinsBeforeSong": 5,

              "upvoters": {
                "upvoter": 1
              },

              "downvoters": {
                "downvoter": 1
              },

              "next": "backSong"
            },

            "backSong": {

              "data": {
                "album_name": "The Head and the Heart",
                "artist_name": "The Head and the Heart",
                "image_url": "www.barfoo.com/bar",
                "name": "Down in the Valley"
              },

              "requester": "user",

              "coinsBeforeSong": 5
            }
          }
        },

        "openNet": {

          "admins": {
            "admin": 1
          },

          "users": {
            "admin": 1,
            "user": 1
          }
        }

      },

      "private": {
        "privateNet": {

          "users": {
            "admin": 1,
            "user": 1
          },

          "admins": {
            "admin": 1
          },

          "invitees": {
            "invitee": 1
          },

          "requesters": {
            "requester": 1
          }

        }
      },

      "invisible": {
        "invisibleNet": {

          "users": {
            "admin": 1,
            "user": 1
          },

          "admins": {
            "admin": 1
          },

          "invitees": {
            "invitee": 1
          }
        }
      }

    },

    "users": {

      "admin": {
        "name": "Joe Admin",
        "email": "jadmin@hmc.edu",
        "networks": {
          "testNet": {
            "coins": 5,
            "is_admin": "true",
            "security": "open"
          },

          "openNet": {
            "coins": 5,
            "is_admin": "true",
            "security": "open"
          },

          "privateNet": {
            "coins": 5,
            "is_admin": "true",
            "security": "private"
          }
        }
      },

      "user": {
        "name": "Bob User",
        "email": "buser@hmc.edu",
        "networks": {
          "testNet": {
            "coins": 5,
            "security": "open"
          },

          "openNet": {
            "coins": 5,
            "security": "open"
          },

          "privateNet": {
            "coins": 5,
            "security": "open"
          }
        }
      },

      "upvoter": {
        "name": "Song Lover",
        "email": "uvoter@hmc.edu",
        "networks": {
          "testNet": {
            "coins": 5,
            "security": "open"
          }
        }
      },

      "downvoter": {
        "name": "Song Hater",
        "email": "dvoter@hmc.edu",
        "networks": {
          "testNet": {
            "coins": 5,
            "security": "open"
          }
        }
      },

      "invitee": {
        "name": "Invitee",
        "email": "invitee@hmc.edu"
      },

      "requester": {
        "name": "Requester",
        "email": "requester@hmc.edu"
      }

    }
  },

  "users": {
    "user": {"uid": "user"},
    "admin": {"uid": "admin"},
    "upvoter": {"uid": "upvoter"},
    "downvoter": {"uid": "downvoter"},
    "newUser": {"uid": "newUser"},
    "invitee": {"uid": "invitee"},
    "requester": {"uid": "requester"},
    "anon": null
  },

  "tests": {

    // USER TESTS

    // Users can read their own data and noone elses
    "users/admin": {
      "canRead": ["admin"],
      "cannotRead": ["user", "anon"]
    },
    "users/user": {
      "canRead": ["user"],
      "cannotRead": ["admin", "anon"]
    },

    // A new user can add themselves to the database, as long as they have a
    // name and an email address
    "users/newUser": {
      "canWrite": [
        {"auth": "newUser", "data": {
          "name": "Newbie",
          "email": "newbie@hmc.edu"
        }}
      ],
      "cannotWrite": [
        {"auth": "newUser", "data": {"name": "Newbie"}},
        {"auth": "newUser", "data": {"email": "newbie@hmc.edu"}},
        {"auth": "user", "data": {
          "name": "Newbie",
          "email": "newbie@hmc.edu"
        }},
        {"auth": "admin", "data": {
          "name": "Newbie",
          "email": "newbie@hmc.edu"
        }}
      ]
    },

    // Users can change their own name as long as it remains a string
    "users/user/name": {
      "canWrite": [{"auth": "user", "data": "Any String"}],
      "cannotWrite": [
        {"auth": "user", "data": 5},
        {"auth": "admin", "data": "Someone elses name"},
        {"auth": "anon", "data": "Not even a user"}
      ]
    },

    /// \todo canWrite tests for email: must enforce uniqueness,
    /// or disallow all writes and let the server do it

    // Users cannot change their coin count; only a trusted server can
    "users/user/networks/testNet/coins": {
      "cannotWrite": [
        {"auth": "user", "data": 10},
        {"auth": "user", "data": "10"},
        {"auth": "admin", "data": 10},
        {"auth": "admin", "data": "10"},
        {"auth": "anon", "data": 10},
        {"auth": "anon", "data": "10"}
      ]
    },

    // Users can add themselves to a network iff they start out with 5 coins and the correct security
    "users/user/networks/newNet": {
      "canWrite": [
        {"auth": "user", "data": {
          "coins": 5,
          "security": "open"
        }}
      ],
      "cannotWrite": [
        {"auth": "user", "data": {
          "coins": 10,
          "security": "open"
        }},
        {"auth": "user", "data": {
          "coins": 5,
          "security": "private"
        }},
        {"auth": "user", "data": {
          "coins": 5
        }},
        {"auth": "user", "data": {
          "security": "open"
        }},
        {"auth": "admin", "data": {
          "coins": 5
        }},
        {"auth": "anon", "data": {
          "coins": 5
        }}
      ]
    },

    // Users can remove themselves but no one elsefrom networks
    "users/user/networks/testNet": {
      "canWrite": [{"auth": "user", "data": null}]
    },
    "users/admin/networks/testNet": {
      "cannotWrite": [{"auth": "user", "data": null}]
    },

    // NETWORK TESTS

    // Basic network mechanics: same for all networks

    // A user can read the data in their own network
    "networks/open/testNet": {
      "canRead": ["user", "admin"],
      "cannotRead": ["anon"]
    },

    // A user can remove themselves from a network, and admins can kick users
    // out of their networks
    "networks/open/testNet/users/user": {
      "canWrite": [
        {"auth": "user", "data": null},
        {"auth": "admin", "data": null}
      ]
    },
    "networks/open/testNet/users/admin": {
      "canWrite": [
        {"auth": "admin", "data": null}
      ],
      "cannotWrite": [
        {"auth": "user", "data": null}
      ]
    },

    // A user can add or remove themselves but no one else to the upvote/downvote
    // list of the currently playing song only
    "networks/open/testNet/queue/frontSong/upvoters/user": {
      "canWrite": [
        {"auth": "user", "data": 1},
        {"auth": "user", "data": null}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "admin", "data": null},
        {"auth": "anon", "data": 1},
        {"auth": "anon", "data": null}
      ]
    },
    "networks/open/testNet/queue/frontSong/upvoters/admin": {
      "canWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "admin", "data": null}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1},
        {"auth": "user", "data": null},
        {"auth": "anon", "data": 1},
        {"auth": "anon", "data": null}
      ]
    },
    "networks/open/testNet/queue/backSong/upvoters/user": {
      "cannotWrite": [
        {"auth": "user", "data": 1}
      ]
    },
    "networks/open/testNet/queue/backSong/upvoters/admin": {
      "cannotWrite": [
        {"auth": "admin", "data": 1}
      ]
    },
    "networks/open/testNet/queue/frontSong/downvoters/user": {
      "canWrite": [
        {"auth": "user", "data": 1},
        {"auth": "user", "data": null}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "admin", "data": null},
        {"auth": "anon", "data": 1},
        {"auth": "anon", "data": null}
      ]
    },
    "networks/open/testNet/queue/frontSong/downvoters/admin": {
      "canWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "admin", "data": null}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1},
        {"auth": "user", "data": null},
        {"auth": "anon", "data": 1},
        {"auth": "anon", "data": null}
      ]
    },
    "networks/open/testNet/queue/backSong/downvoters/user": {
      "cannotWrite": [
        {"auth": "user", "data": 1}
      ]
    },
    "networks/open/testNet/queue/backSong/downvoters/admin": {
      "cannotWrite": [
        {"auth": "admin", "data": 1}
      ]
    },

    // A user cannot be in the upvote and downvote list at the same time
    "networks/open/testNet/queue/frontSong/upvoters/downvoter": {
      "cannotWrite": [{"auth": "downvoter", "data": 1}]
    },
    "networks/open/testNet/queue/frontSong/downvoters/upvoter": {
      "cannotWrite": [{"auth": "upvoter", "data": 1}]
    },

    // Security tests: different for each security level

    // Security tests: open network
    // * Users can add themselves autonomously
    // * Admins can invite users, but the users must accept the invitation and
    //    add themselves
    // * Unauthenticated clients cannot join the network
    // * Admins can add more admins
    // * All logged-in users can browse open networks
    "networks/open/openNet": {
      "canRead": ["admin", "user", "newUser"],
      "cannotRead": ["anon"]
    },
    "networks/open/openNet/users/newUser": {
      "canWrite": [
        {"auth": "newUser", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "anon", "data": 1}
      ]
    },
    "networks/open/openNet/users/anon": {
      "cannotWrite": [
        {"auth": "anon", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "admin", "data": 1}
      ]
    },
    "networks/open/openNet/admins/user": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1}
      ]
    },

    // Security tests: private network
    // * Users can request to join. They will be added when an admin approves the request.
    // * Admins can invite users, but the users must accept the invitation and
    //    add themselves
    // * Unauthenticated clients cannot join the network
    // * Admins can add more admins
    // * All logged-in users can browse (but not join) private networks
    "networks/private/privateNet": {
      "canRead": ["admin", "user", "newUser"],
      "cannotRead": ["anon"]
    },
    "networks/private/privateNet/invitees/invitee": {
      "canWrite": [
        // User can accept/decline invitation
        {"auth": "invitee", "data": null}
      ],
      "cannotWrite": [
        // Users cannot invite themselves
        {"auth": "invitee", "data": 1}
      ]
    },
    "networks/private/privateNet/invitees/newUser": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "newUser", "data": 1}
      ]
    },
    "networks/private/privateNet/requesters/requester": {
      "canWrite": [
        // Admin can accept/deny request
        {"auth": "admin", "data": null}
      ],
      "cannotWrite": [
        {"auth": "user", "data": null}
      ]
    },
    "networks/private/privateNet/requesters/newUser": {
      "canWrite": [
        {"auth": "newUser", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "user", "data": 1}
      ]
    },
    "networks/private/privateNet/users/invitee": {
      "canWrite": [
        {"auth": "invitee", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "newUser", "data": 1},
        {"auth": "requester", "data": 1},
        {"auth": "anon", "data": 1}
      ]
    },
    "networks/private/privateNet/users/requester": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1},
        {"auth": "newUser", "data": 1},
        {"auth": "requester", "data": 1},
        {"auth": "anon", "data": 1}
      ]
    },
    "networks/private/privateNet/users/anon": {
      "cannotWrite": [
        {"auth": "anon", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "admin", "data": 1}
      ]
    },
    "networks/private/privateNet/admins/user": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1}
      ]
    },

    // Security tests: invisible network
    // * Users cannot request to join
    // * Admins can invite users, but the users must accept the invitation and
    //    add themselves
    // * Unauthenticated clients cannot join the network
    // * Admins can add more admins
    // * Only current users and invitees can view invisible networks
    "networks/invisible/invisibleNet": {
      "canRead": ["admin", "user", "invitee"],
      "cannotRead": ["newUser", "anon"]
    },
    "networks/invisible/invisibleNet/invitees/invitee": {
      "canWrite": [
        // User can accept/decline invitation
        {"auth": "invitee", "data": null}
      ],
      "cannotWrite": [
        // Users cannot invite themselves
        {"auth": "invitee", "data": 1}
      ]
    },
    "networks/invisible/invisibleNet/invitees/newUser": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "newUser", "data": 1}
      ]
    },
    "networks/invisible/invisibleNet/requesters/newUser": {
      "cannotWrite": [
        {"auth": "newUser", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "admin", "data": 1}
      ]
    },
    "networks/invisible/invisibleNet/users/invitee": {
      "canWrite": [
        {"auth": "invitee", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "admin", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "newUser", "data": 1},
        {"auth": "requester", "data": 1},
        {"auth": "anon", "data": 1}
      ]
    },
    "networks/invisible/invisibleNet/users/anon": {
      "cannotWrite": [
        {"auth": "anon", "data": 1},
        {"auth": "user", "data": 1},
        {"auth": "admin", "data": 1}
      ]
    },
    "networks/invisible/invisibleNet/admins/user": {
      "canWrite": [
        {"auth": "admin", "data": 1}
      ],
      "cannotWrite": [
        {"auth": "user", "data": 1}
      ]
    }
  }
}