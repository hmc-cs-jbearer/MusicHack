{
    "rules": {
        
        "networks": {
          "$network" : {
            ".read" : "data.child('users').hasChild(auth.uid)",
            ".write" : "data.child('users').hasChild(auth.uid) &&
              // only an admin can delete anetwork
              (newData.exists() || data.child('admins').hasChild(auth.uid))",
            ".validate" : "!newData.exists() ||
              (
                newData.hasChild('users') &&
                newData.hasChild('admins')
              )"
          }
        },
        
        "users": {
          "$user" : {
            ".read" : "auth.uid == $user",
            ".write" : "auth.uid == $user",
            ".validate" : "newData.hasChild('networks') && 
              newData.hasChild('name') &&
              newData.child('name').isString() &&
              newData.hasChild('username') &&
              newData.child('username').isString()",
              
            "networks" : {
              ".validate" : "newData.hasChild('coins') &&
                newData.child('coins').isNumber()"
            }
          }
        }
        
    }
}